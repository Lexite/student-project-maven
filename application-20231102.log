2023-11-02 23:01:03.870 [main] INFO  edu.javacourse.studentorder.dao.DictionaryDaoImplTest - TEST 2023-11-02T23:01:03.862335300 2023-11-02T23:01:03.863337400
2023-11-02 23:02:02.252 [main] DEBUG edu.javacourse.studentorder.dao.StudentOrderDaoImpl - SO StudentOrder{studentOrderId=10, studentOrderDate=null, studentOrderStatus=null, husband=Adult{passportSeria='100010', passportNumber='1010', issueDate=2017-09-15, issueDepartment=PassportOffice{officeId=1, officeAreaId='', officeName=''}, university=University{universityId=2, universityName=''}, studentId='HH12345'} Person{surName='Петров', givenName='Виктор', patronymic='Сергеевич', dateOfBirth=1997-02-24, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, wife=Adult{passportSeria='200010', passportNumber='2010', issueDate=2018-04-05, issueDepartment=PassportOffice{officeId=2, officeAreaId='', officeName=''}, university=University{universityId=1, universityName=''}, studentId='WW12345'} Person{surName='Петрова', givenName='Александра', patronymic='Федоровна', dateOfBirth=1997-02-24, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, children=[Child{certificateNumber='3010', issueDate=2018-06-11, issueDepartment=RegisterOffice{officeId=2, officeAreaId='', officeName=''}} Person{surName='Петрова', givenName='Ирина', patronymic='Викторовна', dateOfBirth=2018-06-29, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, Child{certificateNumber='4010', issueDate=2018-07-19, issueDepartment=RegisterOffice{officeId=3, officeAreaId='', officeName=''}} Person{surName='Петрова', givenName='Евгений', patronymic='Викторович', dateOfBirth=2018-06-29, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}], marriageCertificateId='123456010', marriageOffice=RegisterOffice{officeId=1, officeAreaId='', officeName=''}, marriageDate=2023-07-04}
2023-11-02 23:02:02.302 [main] DEBUG edu.javacourse.studentorder.dao.StudentOrderDaoImpl - SO StudentOrder{studentOrderId=10, studentOrderDate=null, studentOrderStatus=null, husband=Adult{passportSeria='100010', passportNumber='1010', issueDate=2017-09-15, issueDepartment=PassportOffice{officeId=1, officeAreaId='', officeName=''}, university=University{universityId=2, universityName=''}, studentId='HH12345'} Person{surName='null', givenName='Виктор', patronymic='Сергеевич', dateOfBirth=1997-02-24, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, wife=Adult{passportSeria='200010', passportNumber='2010', issueDate=2018-04-05, issueDepartment=PassportOffice{officeId=2, officeAreaId='', officeName=''}, university=University{universityId=1, universityName=''}, studentId='WW12345'} Person{surName='Петрова', givenName='Александра', patronymic='Федоровна', dateOfBirth=1997-02-24, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, children=[Child{certificateNumber='3010', issueDate=2018-06-11, issueDepartment=RegisterOffice{officeId=2, officeAreaId='', officeName=''}} Person{surName='Петрова', givenName='Ирина', patronymic='Викторовна', dateOfBirth=2018-06-29, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, Child{certificateNumber='4010', issueDate=2018-07-19, issueDepartment=RegisterOffice{officeId=3, officeAreaId='', officeName=''}} Person{surName='Петрова', givenName='Евгений', patronymic='Викторович', dateOfBirth=2018-06-29, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}], marriageCertificateId='123456010', marriageOffice=RegisterOffice{officeId=1, officeAreaId='', officeName=''}, marriageDate=2023-07-04}
2023-11-02 23:02:02.333 [main] ERROR edu.javacourse.studentorder.dao.StudentOrderDaoImpl - ОШИБКА: нулевое значение в столбце "h_sur_name" нарушает ограничение NOT NULL
  Detail: Ошибочная строка содержит (2, 0, 2023-11-02 23:02:02.326646, null, Виктор, Сергеевич, 1997-02-24, 100010, 1010, 2017-09-15, 1, 195000, 1, 12, , 142, 2, HH12345, Петрова, Александра, Федоровна, 1997-02-24, 200010, 2010, 2018-04-05, 2, 195000, 1, 12, , 142, 1, WW12345, 123456010, 1, 2023-07-04).
org.postgresql.util.PSQLException: ОШИБКА: нулевое значение в столбце "h_sur_name" нарушает ограничение NOT NULL
  Detail: Ошибочная строка содержит (2, 0, 2023-11-02 23:02:02.326646, null, Виктор, Сергеевич, 1997-02-24, 100010, 1010, 2017-09-15, 1, 195000, 1, 12, , 142, 2, HH12345, Петрова, Александра, Федоровна, 1997-02-24, 200010, 2010, 2018-04-05, 2, 195000, 1, 12, , 142, 1, WW12345, 123456010, 1, 2023-07-04).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190) ~[postgresql-42.6.0.jar:42.6.0]
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152) ~[postgresql-42.6.0.jar:42.6.0]
	at edu.javacourse.studentorder.dao.StudentOrderDaoImpl.saveStudentOrder(StudentOrderDaoImpl.java:101) [classes/:?]
	at edu.javacourse.studentorder.dao.StudentOrderDaoImplTest.saveStudentOrderError(StudentOrderDaoImplTest.java:30) [test-classes/:?]
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.1.jar:4.13.1]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.1.jar:4.13.1]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.1.jar:4.13.1]
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.1.jar:4.13.1]
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.1.jar:4.13.1]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.1.jar:4.13.1]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.1.jar:4.13.1]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
2023-11-02 23:06:10.813 [main] DEBUG edu.javacourse.studentorder.dao.StudentOrderDaoImpl - SO StudentOrder{studentOrderId=10, studentOrderDate=null, studentOrderStatus=null, husband=Adult{passportSeria='100010', passportNumber='1010', issueDate=2017-09-15, issueDepartment=PassportOffice{officeId=1, officeAreaId='', officeName=''}, university=University{universityId=2, universityName=''}, studentId='HH12345'} Person{surName='Петров', givenName='Виктор', patronymic='Сергеевич', dateOfBirth=1997-02-24, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, wife=Adult{passportSeria='200010', passportNumber='2010', issueDate=2018-04-05, issueDepartment=PassportOffice{officeId=2, officeAreaId='', officeName=''}, university=University{universityId=1, universityName=''}, studentId='WW12345'} Person{surName='Петрова', givenName='Александра', patronymic='Федоровна', dateOfBirth=1997-02-24, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, children=[Child{certificateNumber='3010', issueDate=2018-06-11, issueDepartment=RegisterOffice{officeId=2, officeAreaId='', officeName=''}} Person{surName='Петрова', givenName='Ирина', patronymic='Викторовна', dateOfBirth=2018-06-29, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}, Child{certificateNumber='4010', issueDate=2018-07-19, issueDepartment=RegisterOffice{officeId=3, officeAreaId='', officeName=''}} Person{surName='Петрова', givenName='Евгений', patronymic='Викторович', dateOfBirth=2018-06-29, address=Address{postCode='195000', street=Street{streetCode=1, streetName='First street'}, building='12', extension='', apartment='142'}}], marriageCertificateId='123456010', marriageOffice=RegisterOffice{officeId=1, officeAreaId='', officeName=''}, marriageDate=2023-07-04}
